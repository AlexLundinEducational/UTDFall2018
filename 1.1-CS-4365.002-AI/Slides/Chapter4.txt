Chapter 4 (Page 140)
Beyond Classical Search

Stochastic - randomnly determined, not predictable

4.1 Local Search And Optomizations
	Hillclimbing
		Pros
			fast
		Cons
			doesnt have ability to go downhill
			get stuck at:
				local maxima because
					neighbors are lower, so it won't move to the neighbor nodes
				ridge
					series of local maxima
				plateau
			depends on landscape	
	Simulate annealing
		example is a pingpong ball finding rest on a bumpy surface
			shake the surface just hard enough to pop out and start over
		Pros
			hillclimb with randomn progression from probability and tempurature
		Cons
	Local beam
		shares info between parallel threads
		Pros
			progress is shared between processes
		Cons	
			threads have the potential to converge on one area of the set space
	Genetic
		Pros
			usefull components drive creation (fitness = reproduction)
		Cons
			randomn mutations can inhibit 
			
4.2 Local Search In Continuous Spaces (149)

4.3 Searching With Nondeterministic Actions (153)
4.4 Searching With Partial Observations (158)
4.5 Online Search Agents And Unknown Environments (167)
4.6 Summary (173)
	Local search methods 
		operate on complete-state formulations
		keeping only a small number of nodes in memory. 
		Several stochastic algorithms have
			simulated annealing
			when given an appropriate cooling schedule
			return optimal solutions
		ie. hill climbing 
	local search methods in continuous spaces. 
		Linear pro. granuning and convex optimization problem; 
			obey certain restrictions on the shape of the state space and the nature of the objective function
			and admit polynomial-time algorithms that are often extremely efficient in practice_
	A genetic algorithm is a 
		stochastic hill-climbing search 
		large population of states is maintained
		New states 
			are generated by mutation and by crossover
			combine pairs of states from the population.
	In nondeterministic environments
		agents can apply AND—OR search to generate Con-tingent plans that reach the goal regardless of which outcomcs occur during execution_
	When the environment is partially observable, 
		the belief state represents the set of possible states that the agent might be in.
	Standard search algorithms 
		can be applied directly to belief-state space to solve sensor-less problems, 
		and belief-state AND—OR search can solve general partially observable problems
		Incremental algorithms that construct solutions state-by-state within a belief state are often more efficient.
	Exploration problems arise when the agent has no idea about the states and actions of its environment. 
		For safely explorable environments, online search agents can build a map and find a goal if one exists. 
		Updating heuristic estimates from experience provides an effective method to escape from local minima.
Exercises (177)