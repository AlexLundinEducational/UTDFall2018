Exam 1
	Chapter 1 
		-What is SA? 
		Module 1
	Chapter 2
		-Why is SA Important? 
		Module 2
	Chapter 3 
		-The Many Contexts of SA? 
		Module 1
	Chapter 4
		-Understanding Quality Attributes? 
		Module 2
	Chapter 13
		-Tactics and Patterns 
		Module 5 and 5 Extra
	Chapter 16
		-Architecture and Requirements 
		Module 3
		
Module 1
	Definitions:
		fundamental organization of a system, embodied in it's components,
			relationships and principles governing design and evolutions.
			
	Analogy Example: Importance of architecture to a non-technical person
	Common Elements (Slide 11)
		major components
		relationships and interactions
		omits low level functions
		includes rational behind the low level functons
		NOT a single structure

	SDLC-Waterfall
		RE -> analysis and design -> build and test -> integration -> deploy
		planning                  -> construction
		Pros
			linear progress
			favors small projects
		Cons
			does not handle change well
	Iterative
		incremental delivery
		Pros
			handles change well
		Cons
			
	Agile
		People oriented
		Pros
			handles change well
		Cons
			communication overhead
	Spiral
		ID, Design, Build, Evaluate / Risk analysis
		Pros
			handles change well
		Cons
			chaotic sprial
	Architecture Vs. Design (Slide 32)
		high level vs low level
Module 2
	What is Software Architecture (Slide 5 & 7)
	Views and Structures (Slide 14)
		view
			represenation of the set of elements
		structure
			set of elements
	Architectural Patterns
		-Generic Layered
		-Repository Architecture
		-Client-Server architecture
		-pipe and filter
		-hybrid architectures.
		
	What makes good architecture?
		-Good rule of thumb (Slide 26)
			1 should be the product of a single, or small group with a single identified learder
				technical consistency
				strong connection between architect and developers
			2 based on prioritized list of well specified quality attribute requirements
			3 documented in terms of views
			4 evaluated by ability to deliver important quality attributes
				should occur early to allow for changes
			5 should be created in an incremental approach
				skeletal prototype with extensions during each iteration		
	Who is involved in Architecture
		Stakeholders
			Developement organization
			marketing
			end user
			maintenence
			customer
	Responsibilities and Skillsets of Architects (Slide 37)
		liaison with stakeholder
		tech knowledge
		SE
		Risk management
	Goal of SA (Slide 39)
	3C's Advice for managers (Slide 41)
		Capability
		Culture
		Commitment
	AIC (Slide 44)
	
Module 3
	ASR (Slide 3-5)
		Architecturaly Significant Requirements
		profound impact on architecture
		profound impact on business
		
	4 ways to gather ASR:
		-ASR from Stakeholders
		-Quality Attribute Workshop (Slide 10)
			-know the steps
			step1
				describe the workshop
			step2
				business presentation
			step3
				architectural plan presentation
			step4
				identify the architectural drivers
			step5
				scenario brainstorming
			step6
				scenario consolidation
			step7
				scenario prioritization
			step8
				scenario refinement
		-ASRs from the Business Goals	
			-categories of business goals
		-Utility Tree
			-What is a Utility Tree (Slide 19)
			-Example (Slide 20 and 21)
			-Next steps (Slide 23)
			-Root is utility
			-Second level is QA categories
			-Third refines, importance and difficulty
				(business, technical)
	
	
Module 4
	13 Reasons of why SA is important
		Inhibiting or Enabling System's Quality Attribute (Slide 4)
		Changes (Slide 5)
		Predicting System QA (Slide 6)
		Communication of Stakeholder
		hardest to change Design Decision
		Constraints
		Organizational Structure
		Basis Prototype
		Key of cost and schedule
		Reuse
		Focus on assembling components, rather than creation
		restricting design focuses developers creativity later
		foundation for training
	
	Independent Systems
		-Commercial off the shelf
	Restriction of Design Vocab
	Basis for training
	Slide 19
		-Answer: depends on organization
	Slide 20
		Functionality and QA are Orthogonal (independent)
	Quality Attribute Considerations
	How do we make decisions (slide 32)
		Allocation of responsibilities
		Data and Coordination models
	Mapping
	Slide 40 & 41
	
Module 5
	3C's of SA
	Pattern	
		Context, problem, solution
	
	Different patterns:
		-Main program and Subroutine
		Object oriented
		Layered
		Client Server
		Pipe and Filter
		Peer to Peer
		Publish-Subscribe
		Blackboard
	


	Module 5 Extra
	Mobile Robotics (4 solutions)
		-Block Diagrams
		-Pros and Cons
	
7 Short Answer Questions

1 of them is for sure on Utility Trees