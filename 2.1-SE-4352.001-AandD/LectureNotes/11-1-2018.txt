Reverse Engineering

	Why Reverse Engineering?
		recovery of lost info
		reuse
		
	Design recovery
	
	Redocumentation
		simple
		unintrusive form of reconstruction
		
		
	Views
		structural
		functional
		behavioral
		
	Reengineering vs Reverse Engineering
	
	Reverse Engineering
	
	Reconstruction
		original developers gone
		recorded documents lost
		original developers did not follow plan
		form of reverse engineering
		
	Purposes:
		ensure conformance between as built and as designed
		
	Extracting Architecture
		human experts
		recognizing known patterns
		reconstructing file mappings (object file to a class file)
		
	Reconstruction Phases
		Raw view extractions
			source code, build scripts
			extract existing architecture
				code, header files, build files
				execution traces
			capture interests from extracted information
				variables, function names
			dynamic	information 
				might not be avaiable from source code
				poylmorphism, function pointers, runtime parameterization, plugins
			common tools
				static
					lexical analyziers, parsers, AST
				dynamic
					profiler, code instrumation tools
		Database construction
			
		View fusion and manipulation
			combine views from database
			individual views might now be completted
				static view might miss dynamic calling functions
		Architecture Analysis
			view fusion results in set of hypothesis about system