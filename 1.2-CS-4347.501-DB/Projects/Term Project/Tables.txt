-- Generated by Oracle SQL Developer Data Modeler 18.2.0.179.0756
--   at:        2018-12-09 19:47:08 CST
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c



CREATE TABLE catalog (
    entry                INTEGER NOT NULL,
    product_product_id   INTEGER NOT NULL,
    vendor_vendor_id     INTEGER NOT NULL
);

ALTER TABLE catalog
    ADD CONSTRAINT catalog_pk PRIMARY KEY ( entry,
                                            vendor_vendor_id,
                                            product_product_id );

CREATE TABLE customer (
    prefered_salesman    VARCHAR2(30),
    customer_id          INTEGER NOT NULL,
    person_personal_id   INTEGER NOT NULL
);

ALTER TABLE customer ADD CONSTRAINT customer_pk PRIMARY KEY ( customer_id,
                                                              person_personal_id );

CREATE TABLE customer_sales_record_fk (
    customer_customer_id           INTEGER NOT NULL,
    customer_personal_id           INTEGER NOT NULL,
    sales_record_sales_record_id   NUMBER NOT NULL,
    sales_record_sales_id          INTEGER NOT NULL
);

ALTER TABLE customer_sales_record_fk
    ADD CONSTRAINT relation_22_pk PRIMARY KEY ( customer_customer_id,
                                                customer_personal_id,
                                                sales_record_sales_record_id,
                                                sales_record_sales_id );

CREATE TABLE department (
    department_id     INTEGER NOT NULL,
    department_name   VARCHAR2(30 CHAR)
);

ALTER TABLE department ADD CONSTRAINT department_pk PRIMARY KEY ( department_id );

CREATE TABLE employee (
    title                              VARCHAR2(30),
    supervisor_id                      INTEGER,
    employee_id                        INTEGER NOT NULL,
    person_personal_id                 INTEGER NOT NULL, 
--  ERROR: Column name length exceeds maximum allowed length(30) 
    monthly_salary_monthly_salary_id   NUMBER,
    transaction_numer                  INTEGER
);

ALTER TABLE employee ADD CONSTRAINT employee_pk PRIMARY KEY ( employee_id,
                                                              person_personal_id );

CREATE TABLE employee_sales_record_fk (
    employee_employee_id           INTEGER NOT NULL,
    employee_personal_id           INTEGER NOT NULL,
    sales_record_sales_record_id   NUMBER NOT NULL,
    sales_record_sales_id          INTEGER NOT NULL
);

ALTER TABLE employee_sales_record_fk
    ADD CONSTRAINT relation_21_pk PRIMARY KEY ( employee_employee_id,
                                                employee_personal_id,
                                                sales_record_sales_record_id,
                                                sales_record_sales_id );

CREATE TABLE interview (
    job_position                                           INTEGER,
    interveiw_time                                         TIMESTAMP,
    interviewee_interviewee_id                             INTEGER NOT NULL,
    job_position_job_id                                    INTEGER NOT NULL,
    interviewer_interviewer_id                             INTEGER NOT NULL, 
--  ERROR: Column name length exceeds maximum allowed length(30) 
    interviewee_potential_employee_potential_employee_id   INTEGER NOT NULL, 
--  ERROR: Column name length exceeds maximum allowed length(30) 
    interviewer_employee_employee_id                       INTEGER NOT NULL, 
--  ERROR: Column name length exceeds maximum allowed length(30) 
    interviewer_employee_person_personal_id                INTEGER NOT NULL, 
--  ERROR: Column name length exceeds maximum allowed length(30) 
    job_position_department_department_id                  INTEGER NOT NULL, 
--  ERROR: Column name length exceeds maximum allowed length(30) 
    interviewee_potential_employee_person_personal_id      INTEGER NOT NULL
);

CREATE TABLE interviewee (
    interviewee_id                             INTEGER NOT NULL, 
--  ERROR: Column name length exceeds maximum allowed length(30) 
    potential_employee_potential_employee_id   INTEGER NOT NULL, 
--  ERROR: Column name length exceeds maximum allowed length(30) 
    potential_employee_person_personal_id      INTEGER NOT NULL
);

ALTER TABLE interviewee
    ADD CONSTRAINT interviewee_pk PRIMARY KEY ( interviewee_id,
                                                potential_employee_potential_employee_id,
                                                potential_employee_person_personal_id );

CREATE TABLE interviewer (
    job_id                        INTEGER,
    grade                         NUMBER,
    interviewer_id                INTEGER NOT NULL,
    employee_employee_id          INTEGER NOT NULL,
    employee_person_personal_id   INTEGER NOT NULL
);

ALTER TABLE interviewer
    ADD CONSTRAINT interviewer_pk PRIMARY KEY ( interviewer_id,
                                                employee_employee_id,
                                                employee_person_personal_id );

CREATE TABLE job_position (
    job_id                     INTEGER NOT NULL,
    job_description            VARCHAR2(30),
    posted_date                TIMESTAMP,
    department_department_id   INTEGER NOT NULL
);

ALTER TABLE job_position ADD CONSTRAINT job_position_pk PRIMARY KEY ( job_id,
                                                                      department_department_id );

CREATE TABLE monthly_salary (
    transaction_numer   INTEGER NOT NULL,
    pay_date            DATE,
    amount              FLOAT,
    monthly_salary_id   NUMBER NOT NULL
);

ALTER TABLE monthly_salary ADD CONSTRAINT monthly_salary_pkv2 PRIMARY KEY ( transaction_numer );

ALTER TABLE monthly_salary ADD CONSTRAINT monthly_salary_pk UNIQUE ( monthly_salary_id );

CREATE TABLE part (
    price      NUMBER,
    part_id    NUMBER NOT NULL,
    part_id2   INTEGER NOT NULL
);

ALTER TABLE part ADD CONSTRAINT part_pkv2 PRIMARY KEY ( part_id2 );

ALTER TABLE part ADD CONSTRAINT part_pk UNIQUE ( part_id );

CREATE TABLE person (
    first_name       VARCHAR2(30) NOT NULL,
    last_name        VARCHAR2(30),
    personal_id      INTEGER NOT NULL,
    age              INTEGER,
    gender           VARCHAR2(1),
    address_line_1   VARCHAR2(30),
    city             VARCHAR2(30),
    address_line_2   VARCHAR2(30),
    state            VARCHAR2(30),
    zip_code         INTEGER,
    phone_number     INTEGER
);

ALTER TABLE person ADD CONSTRAINT person_pk PRIMARY KEY ( personal_id );

CREATE TABLE potential_employee (
    potential_employee_id   INTEGER NOT NULL,
    person_personal_id      INTEGER NOT NULL
);

ALTER TABLE potential_employee ADD CONSTRAINT potential_employee_pk PRIMARY KEY ( potential_employee_id,
                                                                                  person_personal_id );

CREATE TABLE product (
    "SIZE"         VARCHAR2(25),
    style          VARCHAR2(25),
    list_weight    VARCHAR2(25),
    product_id     INTEGER NOT NULL,
    product_type   VARCHAR2(25)
);

ALTER TABLE product ADD CONSTRAINT product_pk PRIMARY KEY ( product_id );

CREATE TABLE product_part_fk (
    product_product_id   INTEGER NOT NULL,
    part_part_id         NUMBER NOT NULL,
    part_part_id2        INTEGER NOT NULL
);

ALTER TABLE product_part_fk
    ADD CONSTRAINT relation_17_pk PRIMARY KEY ( product_product_id,
                                                part_part_id,
                                                part_part_id2 );

CREATE TABLE product_sales_record_fk (
    product_product_id             INTEGER NOT NULL,
    sales_record_sales_record_id   NUMBER NOT NULL,
    sales_record_sales_id          INTEGER NOT NULL
);

ALTER TABLE product_sales_record_fk
    ADD CONSTRAINT relation_19_pk PRIMARY KEY ( product_product_id,
                                                sales_record_sales_record_id,
                                                sales_record_sales_id );

CREATE TABLE sales_record (
    sale_time         DATE,
    sales_record_id   NUMBER NOT NULL,
    sales_id          INTEGER NOT NULL
);

ALTER TABLE sales_record ADD CONSTRAINT sales_record_pkv2 PRIMARY KEY ( sales_id );

ALTER TABLE sales_record ADD CONSTRAINT sales_record_pk UNIQUE ( sales_record_id );

CREATE TABLE shift (
    end_time                      TIMESTAMP,
    start_time                    TIMESTAMP,
    department_id                 INTEGER NOT NULL,
    employee_id                   INTEGER NOT NULL,
    personal_id                   INTEGER NOT NULL,
    shift_id                      INTEGER NOT NULL,
    department_department_id      INTEGER NOT NULL,
    employee_employee_id          INTEGER NOT NULL,
    employee_person_personal_id   INTEGER NOT NULL
);

ALTER TABLE shift ADD CONSTRAINT shift_pk PRIMARY KEY ( shift_id,
                                                        department_department_id );

CREATE TABLE site (
    site_id         INTEGER NOT NULL,
    site_location   VARCHAR2(20),
    site_name       VARCHAR2(20)
);

ALTER TABLE site ADD CONSTRAINT site_pk PRIMARY KEY ( site_id );

CREATE TABLE site_sales_record_fk (
    site_site_id                   INTEGER NOT NULL,
    sales_record_sales_record_id   NUMBER NOT NULL,
    sales_record_sales_id          INTEGER NOT NULL
);

ALTER TABLE site_sales_record_fk
    ADD CONSTRAINT relation_20_pk PRIMARY KEY ( site_site_id,
                                                sales_record_sales_record_id,
                                                sales_record_sales_id );

CREATE TABLE vendor (
    vendor_id        INTEGER NOT NULL,
    name             VARCHAR2(25),
    address          VARCHAR2(25),
    account_number   INTEGER,
    credit_rating    INTEGER,
    url              VARCHAR2(25)
);

ALTER TABLE vendor ADD CONSTRAINT vendor_pk PRIMARY KEY ( vendor_id );

CREATE TABLE vendor_part_fk (
    vendor_vendor_id   INTEGER NOT NULL,
    part_part_id       NUMBER NOT NULL,
    part_part_id2      INTEGER NOT NULL
);

ALTER TABLE vendor_part_fk
    ADD CONSTRAINT relation_18_pk PRIMARY KEY ( vendor_vendor_id,
                                                part_part_id,
                                                part_part_id2 );

ALTER TABLE catalog
    ADD CONSTRAINT catalog_product_fk FOREIGN KEY ( product_product_id )
        REFERENCES product ( product_id );

ALTER TABLE catalog
    ADD CONSTRAINT catalog_vendor_fk FOREIGN KEY ( vendor_vendor_id )
        REFERENCES vendor ( vendor_id );

ALTER TABLE customer
    ADD CONSTRAINT customer_person_fk FOREIGN KEY ( person_personal_id )
        REFERENCES person ( personal_id );

ALTER TABLE employee
    ADD CONSTRAINT employee_monthly_salary_fk FOREIGN KEY ( transaction_numer )
        REFERENCES monthly_salary ( monthly_salary_id );

ALTER TABLE employee
    ADD CONSTRAINT employee_person_fk FOREIGN KEY ( person_personal_id )
        REFERENCES person ( personal_id );

ALTER TABLE interview
    ADD CONSTRAINT interview_interviewee_fk FOREIGN KEY ( interviewee_interviewee_id,
                                                          interviewee_potential_employee_potential_employee_id,
                                                          interviewee_potential_employee_person_personal_id )
        REFERENCES interviewee ( interviewee_id,
                                 potential_employee_potential_employee_id,
                                 potential_employee_person_personal_id );

ALTER TABLE interview
    ADD CONSTRAINT interview_interviewer_fk FOREIGN KEY ( interviewer_interviewer_id,
                                                          interviewer_employee_employee_id,
                                                          interviewer_employee_person_personal_id )
        REFERENCES interviewer ( interviewer_id,
                                 employee_employee_id,
                                 employee_person_personal_id );

ALTER TABLE interview
    ADD CONSTRAINT interview_job_position_fk FOREIGN KEY ( job_position_job_id,
                                                           job_position_department_department_id )
        REFERENCES job_position ( job_id,
                                  department_department_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE interviewee
    ADD CONSTRAINT interviewee_potential_employee_fk FOREIGN KEY ( potential_employee_potential_employee_id,
                                                                   potential_employee_person_personal_id )
        REFERENCES potential_employee ( potential_employee_id,
                                        person_personal_id );

ALTER TABLE interviewer
    ADD CONSTRAINT interviewer_employee_fk FOREIGN KEY ( employee_employee_id,
                                                         employee_person_personal_id )
        REFERENCES employee ( employee_id,
                              person_personal_id );

ALTER TABLE job_position
    ADD CONSTRAINT job_position_department_fk FOREIGN KEY ( department_department_id )
        REFERENCES department ( department_id );

ALTER TABLE potential_employee
    ADD CONSTRAINT potential_employee_person_fk FOREIGN KEY ( person_personal_id )
        REFERENCES person ( personal_id );

ALTER TABLE product_part_fk
    ADD CONSTRAINT relation_17_part_fk FOREIGN KEY ( part_part_id )
        REFERENCES part ( part_id );

ALTER TABLE product_part_fk
    ADD CONSTRAINT relation_17_part_fkv1 FOREIGN KEY ( part_part_id2 )
        REFERENCES part ( part_id2 );

ALTER TABLE product_part_fk
    ADD CONSTRAINT relation_17_product_fk FOREIGN KEY ( product_product_id )
        REFERENCES product ( product_id );

ALTER TABLE vendor_part_fk
    ADD CONSTRAINT relation_18_part_fk FOREIGN KEY ( part_part_id )
        REFERENCES part ( part_id );

ALTER TABLE vendor_part_fk
    ADD CONSTRAINT relation_18_part_fkv1 FOREIGN KEY ( part_part_id2 )
        REFERENCES part ( part_id2 );

ALTER TABLE vendor_part_fk
    ADD CONSTRAINT relation_18_vendor_fk FOREIGN KEY ( vendor_vendor_id )
        REFERENCES vendor ( vendor_id );

ALTER TABLE product_sales_record_fk
    ADD CONSTRAINT relation_19_product_fk FOREIGN KEY ( product_product_id )
        REFERENCES product ( product_id );

ALTER TABLE product_sales_record_fk
    ADD CONSTRAINT relation_19_sales_record_fk FOREIGN KEY ( sales_record_sales_record_id )
        REFERENCES sales_record ( sales_record_id );

ALTER TABLE product_sales_record_fk
    ADD CONSTRAINT relation_19_sales_record_fkv1 FOREIGN KEY ( sales_record_sales_id )
        REFERENCES sales_record ( sales_id );

ALTER TABLE site_sales_record_fk
    ADD CONSTRAINT relation_20_sales_record_fk FOREIGN KEY ( sales_record_sales_record_id )
        REFERENCES sales_record ( sales_record_id );

ALTER TABLE site_sales_record_fk
    ADD CONSTRAINT relation_20_sales_record_fkv1 FOREIGN KEY ( sales_record_sales_id )
        REFERENCES sales_record ( sales_id );

ALTER TABLE site_sales_record_fk
    ADD CONSTRAINT relation_20_site_fk FOREIGN KEY ( site_site_id )
        REFERENCES site ( site_id );

ALTER TABLE employee_sales_record_fk
    ADD CONSTRAINT relation_21_employee_fk FOREIGN KEY ( employee_employee_id,
                                                         employee_personal_id )
        REFERENCES employee ( employee_id,
                              person_personal_id );

ALTER TABLE employee_sales_record_fk
    ADD CONSTRAINT relation_21_sales_record_fk FOREIGN KEY ( sales_record_sales_record_id )
        REFERENCES sales_record ( sales_record_id );

ALTER TABLE employee_sales_record_fk
    ADD CONSTRAINT relation_21_sales_record_fkv1 FOREIGN KEY ( sales_record_sales_id )
        REFERENCES sales_record ( sales_id );

ALTER TABLE customer_sales_record_fk
    ADD CONSTRAINT relation_22_customer_fk FOREIGN KEY ( customer_customer_id,
                                                         customer_personal_id )
        REFERENCES customer ( customer_id,
                              person_personal_id );

ALTER TABLE customer_sales_record_fk
    ADD CONSTRAINT relation_22_sales_record_fk FOREIGN KEY ( sales_record_sales_record_id )
        REFERENCES sales_record ( sales_record_id );

ALTER TABLE customer_sales_record_fk
    ADD CONSTRAINT relation_22_sales_record_fkv1 FOREIGN KEY ( sales_record_sales_id )
        REFERENCES sales_record ( sales_id );

ALTER TABLE shift
    ADD CONSTRAINT shift_department_fk FOREIGN KEY ( department_id )
        REFERENCES department ( department_id );

ALTER TABLE shift
    ADD CONSTRAINT shift_department_fkv2 FOREIGN KEY ( department_department_id )
        REFERENCES department ( department_id );

ALTER TABLE shift
    ADD CONSTRAINT shift_employee_fk FOREIGN KEY ( employee_id,
                                                   personal_id )
        REFERENCES employee ( employee_id,
                              person_personal_id );

ALTER TABLE shift
    ADD CONSTRAINT shift_employee_fkv2 FOREIGN KEY ( employee_employee_id,
                                                     employee_person_personal_id )
        REFERENCES employee ( employee_id,
                              person_personal_id );

CREATE SEQUENCE monthly_salary_monthly_salary_ START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER monthly_salary_monthly_salary_ BEFORE
    INSERT ON monthly_salary
    FOR EACH ROW
    WHEN ( new.monthly_salary_id IS NULL )
BEGIN
    :new.monthly_salary_id := monthly_salary_monthly_salary_.nextval;
END;
/

CREATE SEQUENCE part_part_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER part_part_id_trg BEFORE
    INSERT ON part
    FOR EACH ROW
    WHEN ( new.part_id IS NULL )
BEGIN
    :new.part_id := part_part_id_seq.nextval;
END;
/

CREATE SEQUENCE sales_record_sales_record_id START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER sales_record_sales_record_id BEFORE
    INSERT ON sales_record
    FOR EACH ROW
    WHEN ( new.sales_record_id IS NULL )
BEGIN
    :new.sales_record_id := sales_record_sales_record_id.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            23
-- CREATE INDEX                             0
-- ALTER TABLE                             59
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           3
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          3
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   9
-- WARNINGS                                 0
